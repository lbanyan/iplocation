<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration status="INFO" monitorInterval="-1" shutdownHook="disable" packages="com.huya.iplocation.log4j2">
	<properties>
		<property name="LOG_HOME">/data/log/iplocation</property>
		<property name="LOG_NAME">api</property>
	</properties>
	<appenders>
		<!--这个输出控制台的配置 -->
		<console name="Console" target="SYSTEM_OUT">
			<!-- 只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />
			<!--输出日志的格式 -->
			<PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss-SSS}] [%p] [%t] %C.%M - %m%n" />
		</console>
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月-日建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFile" fileName="${LOG_HOME}/${LOG_NAME}.log" filePattern="${LOG_HOME}/${LOG_NAME}-%d{yyyyMMdd}-%i.log.gz">
			<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss-SSS}] [%p] [%t] %C.%M - %m%n" />
			<DefaultRolloverStrategy max="30" />
			<Policies>
				<!-- <OnStartupTriggeringPolicy /> -->
				<TimeBasedTriggeringPolicy />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
		</RollingFile>

		<!-- 打印消息到微信 -->
		<WeChat name="WeChat">
			<!-- 只打印错误消息 -->
			<ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY" />
			<!--输出日志的格式 -->
			<PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss}] [${sys:ip}] [%p] [%t] %C.%M - %m%n" />
		</WeChat>
	</appenders>
	<loggers>
		<Root level="INFO" includeLocation="true">
			<appender-ref ref="Console" />
			<appender-ref ref="RollingFile" />
			<AppenderRef ref="WeChat"/>
		</Root>
	</loggers>
</configuration>